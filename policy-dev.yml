# catchall deny
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
# policy from pods to dev db
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: policy-to-db
  namespace: myapp-dev
spec:
  podSelector:
    matchLabels:
      app: demo-policy-pipeline
  policyTypes:
  - Egress
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: db
          location: dc1
          lifecycle: dev
    ports:
    - protocol: TCP
      port: 3306
---
# policy from pods to prod db
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: policy-to-db
  namespace: myapp-dev
spec:
  podSelector:
    matchLabels:
      app: demo-policy-pipeline
  policyTypes:
  - Egress
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: db
          location: dc1
          lifecycle: prod
    ports:
    - protocol: TCP  
      port: 3306
---
# policy from anywhere to pods
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: policy-from-campus
  namespace: myapp-dev
spec:
  podSelector:
    matchLabels:
      app: demo-policy-pipeline
  policyTypes:
  - Ingress
  ingress:
  - from:
    - ipBlock:
        cidr: 172.20.0.71/32
    ports:
    - protocol: TCP
      port: 80
# ---
# # policy from campus with CIDR using services (F5 dependent)
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: policy-from-campus
#   namespace: myapp-dev
# spec:
#   podSelector:
#     matchLabels:
#       system/service_name: frontend
#   policyTypes:
#   - Ingress
#   ingress:
#   - from:
#     - ipBlock:
#         cidr: 172.20.0.71/32
#     ports:
#     - protocol: TCP
#       port: 80
# ---
# # policy from campus with CIDR using services (F5 dependent)
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: policy-from-campus
#   namespace: myapp-dev
# spec:
#   podSelector:
#     matchLabels:
#       system/service_name: frontend
#   policyTypes:
#   - Ingress
#   ingress:
#   - from:
#     - ipBlock:
#         cidr: 172.20.0.71/32
#     ports:
#     - protocol: TCP
#       port: 80
# ---
# # policy from campus with LDAP attributes using services (F5 dependent)
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: policy-from-campus
#   namespace: myapp-dev
# spec:
#   podSelector:
#     matchLabels:
#       system/service_name: frontend
#   policyTypes:
#   - Ingress
#   ingress:
#   - from:
#     - podSelector:
#         matchLabels:
#           LDAP_primaryGroupID: "1107"
#           source: tag
#     ports:
#     - protocol: TCP
#       port: 80